name: CI

on:
  push:
    branches:
      - master
      - release-*
    tags: '*'
  pull_request:

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.6'
          - '1'
          - 'nightly'
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        arch:
          - x64
        include:
          - os: windows-latest
            version: '1'
            arch: x86
          - os: ubuntu-latest
            version: '1'
            arch: x86
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v4
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - name: Install unregistered dependencies (Unix)
        if: ${{ matrix.os != 'windows-latest' }}
        run: julia --project -e 'using Pkg; Pkg.add(PackageSpec(url="https://github.com/anowacki/Geodesics.jl"))'
      # Work around problems with quoting when using PowerShell on Windows by using cmd.exe
      - name: Install unregistered dependencies (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: julia --project -e "using Pkg; Pkg.add(PackageSpec(url=\"https://github.com/anowacki/Geodesics.jl\"))"
        shell: cmd
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
        continue-on-error: ${{ matrix.version == 'nightly' }}
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v5
        with:
          file: lcov.info

  docs:
    name: Documentation
    # needs: test
    runs-on: ubuntu-latest
    env:
      GKSwstype: nul
      PYTHON: 
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@latest
        with:
          version: '1'
      - name: Install dependencies
        run: |
          julia --project=docs -e '
            using Pkg
            Pkg.instantiate()'
      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # If authenticating with GitHub Actions token
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }} # If authenticating with SSH deploy key
        run: julia --color=yes --project=docs/ docs/make.jl
